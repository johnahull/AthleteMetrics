name: Deploy to Staging

on:
  push:
    branches:
      - develop

concurrency:
  group: staging-deploy
  cancel-in-progress: false

jobs:
  test-and-deploy:
    name: Test and Deploy to Staging
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: athletemetrics_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Setup project
        uses: ./.github/actions/setup

      - name: Run TypeScript type check
        run: npm run check

      - name: Generate test credentials
        run: |
          TEST_PASS="$(openssl rand -base64 12)Aa1!"
          echo "ADMIN_PASSWORD=${TEST_PASS}" >> "$GITHUB_ENV"
          echo "‚úÖ Generated secure test credentials"

      - name: Setup test database schema
        run: npm run db:push
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/athletemetrics_test

      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/athletemetrics_test
          SESSION_SECRET: test-secret-key-for-ci
          ADMIN_USER: admin
          ADMIN_EMAIL: admin@test.com
          ADMIN_PASSWORD: ${{ env.ADMIN_PASSWORD }}

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to Railway Staging
        run: |
          echo "üöÄ Deploying to Railway Staging..."
          npm install -g @railway/cli

          # Run migrations on staging database
          railway run --service ${{ secrets.RAILWAY_STAGING_SERVICE_ID }} npm run db:push

          # Deploy the application
          railway up --service ${{ secrets.RAILWAY_STAGING_SERVICE_ID }} --detach

          echo "‚úÖ Deployment initiated, waiting for Railway to complete..."
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for Railway deployment
        run: |
          echo "‚è≥ Waiting for Railway to complete deployment..."
          sleep 30
          echo "‚úÖ Ready for health check"

      - name: Run health check
        run: node scripts/health-check.js
        env:
          HEALTH_CHECK_URL: ${{ secrets.STAGING_URL }}
          HEALTH_CHECK_TIMEOUT: 60000
          HEALTH_CHECK_RETRIES: 5

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Staging deployment successful!"
          echo "URL: ${{ secrets.STAGING_URL }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Staging deployment failed!"
          echo "Check the logs above for details."
          exit 1
