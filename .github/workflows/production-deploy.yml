name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    name: Test and Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npm run check

      - name: Run unit tests
        run: npm run test:run
        env:
          NODE_ENV: test

      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not created"
            exit 1
          fi
          if [ ! -f "dist/index.js" ]; then
            echo "Error: dist/index.js not found"
            exit 1
          fi
          echo "‚úÖ Build verification successful"

      - name: Validate environment configuration
        run: node scripts/validate-env.js
        env:
          RAILWAY_ENVIRONMENT: production

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Production
        run: railway up --service ${{ secrets.RAILWAY_PRODUCTION_SERVICE_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for deployment
        run: sleep 45

      - name: Run health check
        run: node scripts/health-check.js
        env:
          HEALTH_CHECK_URL: ${{ secrets.PRODUCTION_URL }}
          HEALTH_CHECK_TIMEOUT: 60000
          HEALTH_CHECK_RETRIES: 5

      - name: Verify database connection
        run: |
          echo "Verifying production database connection..."
          # Health check already validates database connection
          echo "‚úÖ Database connection verified"

      - name: Notify deployment success
        if: success()
        run: |
          echo "üöÄ Production deployment successful!"
          echo "URL: ${{ secrets.PRODUCTION_URL }}"
          echo "Deployment completed at: $(date)"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          echo "Check the logs above for details."
          echo "Consider rolling back if necessary."
          exit 1

      - name: Create deployment tag
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          TAG="deploy-$(date +%Y%m%d-%H%M%S)"
          git tag -a "$TAG" -m "Production deployment $TAG"
          git push origin "$TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
