/**
 * ReportHeader Component
 * Displays report branding, metadata, and organization info
 */

import React from "react";
import { format } from "date-fns";

interface ReportHeaderProps {
  title: string;
  subtitle?: string;
  organizationName: string;
  generatedBy: string;
  generatedAt: Date;
  dateRange?: {
    start: Date;
    end: Date;
  };
  logoUrl?: string;
  className?: string;
}

export function ReportHeader({
  title,
  subtitle,
  organizationName,
  generatedBy,
  generatedAt,
  dateRange,
  logoUrl,
  className = "",
}: ReportHeaderProps) {
  return (
    <header className={`report-header border-b pb-6 mb-8 ${className}`}>
      <div className="flex items-start justify-between">
        <div className="flex-1">
          {logoUrl && (
            <img
              src={logoUrl}
              alt={`${organizationName} logo`}
              className="h-16 w-auto mb-4"
            />
          )}
          <h1 className="text-3xl font-bold text-gray-900 mb-2">{title}</h1>
          {subtitle && (
            <p className="text-lg text-gray-600 mb-4">{subtitle}</p>
          )}
        </div>

        <div className="text-right text-sm text-gray-600 space-y-1">
          <div className="font-semibold text-gray-900">{organizationName}</div>
          <div>Generated by: {generatedBy}</div>
          <div>Date: {format(generatedAt, "MMM d, yyyy 'at' h:mm a")}</div>
        </div>
      </div>

      {dateRange && (
        <div className="mt-4 pt-4 border-t border-gray-200">
          <div className="text-sm text-gray-600">
            <span className="font-medium">Data Range:</span>{" "}
            {format(dateRange.start, "MMM d, yyyy")} -{" "}
            {format(dateRange.end, "MMM d, yyyy")}
          </div>
        </div>
      )}
    </header>
  );
}

/**
 * ReportFooter Component
 * Displays page numbers and additional report metadata
 */
interface ReportFooterProps {
  pageNumber?: number;
  totalPages?: number;
  additionalInfo?: string;
  className?: string;
}

export function ReportFooter({
  pageNumber,
  totalPages,
  additionalInfo,
  className = "",
}: ReportFooterProps) {
  return (
    <footer className={`report-footer border-t pt-4 mt-8 text-sm text-gray-500 ${className}`}>
      <div className="flex justify-between items-center">
        <div>{additionalInfo}</div>
        {pageNumber !== undefined && totalPages !== undefined && (
          <div>
            Page {pageNumber} of {totalPages}
          </div>
        )}
      </div>
    </footer>
  );
}